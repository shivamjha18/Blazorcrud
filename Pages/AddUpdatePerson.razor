@page "/person/add"
@page "/person/edit/{userId:int}"
@using crud.Services;
@inject IPersonService personService

<PageTitle>@Title</PageTitle>

<h3>@Title</h3>
<a href="/Persons" class="btn btn-dark">show all</a>
<div class="row">
    <div class="col-md-6">
        <EditForm Model="@person" OnValidSubmit="Save">
            <DataAnnotationsValidator/>
            <div class="form-group">
                <label for="Name">Name</label>
                <InputText class="form-control" @bind-Value="person.Name" />
                <ValidationMessage For="@(()=>person.Name)"/>
            </div>
            <div class="form-group">
                <label for="Email">Email</label>
                <InputText class="form-control" @bind-Value="person.Email" />
                <ValidationMessage For="@(()=>person.Email)"/>
            </div>
            <div class="my-2">
                @message
            </div>
            <div class="my-2">
                <button type="submit" class="btn btn-success">Save</button>
            </div>
        </EditForm>

    </div>

</div>

@code {
    [Parameter]
    public int UserId { get; set; }
    private string message = string.Empty;
    Models.Person person = new();
    private string Title = "add person";
    private void Save()
    {
        if (personService.AddUpdate(person))
        {
            message = "sucessfully added";
            person = new();
        }
        else
        {
            message = "couldn't save";
        }
    }
    protected override void OnInitialized()
    {
        if (UserId > 0)
        {
            Title = "update Person";
            person = personService.FindById(UserId);
        }
        base.OnInitialized();
    }

}
